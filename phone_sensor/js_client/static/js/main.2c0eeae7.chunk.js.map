{"version":3,"sources":["observable.ts","api.ts","SignalScopeChart.tsx","App.tsx","index.tsx"],"names":["Observable","init","onChange","state","callbacks","boundSet","this","set","bind","useState","setState","indexOf","useEffect","deRegister","cb","push","splice","sleep","ms","Promise","resolve","setTimeout","Api","ws","waitingOnButton","sendPhotoFunc","imuRawData","imuDataFrame","lastGrabCmd","latestCmdTimestamps","Math","floor","Date","now","frontFacing","button","wait","encoding","quality","resolution","unixTimestamp","NaN","error","frame","grab","imu","onmessage","a","data","onMsg","JSON","parse","msg","nowMs","msToWait","cmd","sendPhoto","send","close","Error","Blob","stringify","WS_URL","document","domain","window","location","port","SignalScopeChart","scope","containerRef","useRef","chartRef","VEGA_CAT_10_COLORS","container","current","setData","uplot","uPlot","width","height","series","labels","map","label","i","stroke","length","points","show","axes","labelSize","grid","ticks","size","values","parent","unwrap","parentElement","ResizeObserver","setSize","offsetWidth","offsetHeight","observe","ref","MainUI","api","videoRef","canvasRef","waitingForButton","setWaitingForButton","showImuData","setShowImuData","showMenu","setShowMenu","frontCamera","setFrontCamera","defaultFrontFacing","useCallback","canvas","video","videoHeight","before","oncanplay","videoWidth","ctx","getContext","timestamp","drawImage","toBlob","BigUint64Array","BigInt","constraints","facingMode","srcObject","navigator","mediaDevices","getUserMedia","getVideoTracks","applyConstraints","sensors","accelerometer","Accelerometer","gyroscope","Gyroscope","magnetometer","Magnetometer","name","SensorClass","permissions","query","sensor","frequency","addEventListener","event","console","x","y","z","start","Object","entries","onDeviceOrientation","alpha","beta","gamma","time","cutoffTime","cutoffIdx","findIndex","t","RAD","PI","q","Quaternion","fromEuler","slice","quaternion","w","removeEventListener","style","position","display","autoPlay","onCanPlay","maxWidth","maxHeight","margin","top","flexDirection","justifyContent","alignItems","color","background","borderRadius","styles","keepLastSecs","Button","variant","fontSize","onClick","Modal","onHide","Header","closeButton","Title","Body","checked","className","e","default","front","back","target","value","selected","marginBottom","alignSelf","disabled","App","setApi","WebSocket","onopen","onclose","onerror","useApi","ReactDOM","render","fallbackRender","resetErrorBoundary","Alert","toString","Link","getElementById"],"mappings":"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","file":"static/js/main.2c0eeae7.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\ntype Callback<T> = (state: T) => void;\n\n// something neat I came up with - similar to https://github.com/pmndrs/valtio\nexport class Observable<T> {\n  state: T;\n  callbacks: Callback<T>[];\n  private boundSet: Callback<T>;\n\n  constructor(init: T, onChange: Callback<T> | null = null) {\n    this.state = init;\n    this.callbacks = onChange ? [onChange] : [];\n    this.boundSet = this.set.bind(this);\n  }\n\n  // register with react lifecycle\n  useState(): [T, (state: T) => void] {\n    const [state, setState] = useState<T>(this.state); // eslint-disable-line\n\n    // this would usually be in the useEffect below, but for compatability with the\n    // component lifecycle we need this to be called here\n    if (this.callbacks.indexOf(setState) === -1) {\n      this.onChange(setState);\n    }\n\n    // eslint-disable-next-line\n    useEffect(() => {\n      return () => this.deRegister(setState);\n    }, []);\n\n    return [state, this.boundSet];\n  }\n\n  onChange(cb: Callback<T>) {\n    this.callbacks.push(cb);\n  }\n\n  deRegister(cb: Callback<T>) {\n    this.callbacks.splice(this.callbacks.indexOf(cb), 1);\n  }\n\n  set(state: T) {\n    this.state = state;\n    for (const cb of this.callbacks) {\n      cb(state);\n    }\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { Observable } from \"./observable\";\n\ntype CameraGrabApiMsg = {\n  cmd: \"grab\";\n  frontFacing: boolean;\n  button: boolean;\n  wait: number | null;\n  encoding: string;\n  quality: number;\n  resolution: [w: number, h: number];\n};\n\ntype ImuApiMsg = {\n  cmd: \"imu\";\n  wait: number | null;\n};\n\ntype ServerDisconnectMsg = {\n  cmd: \"disconnect\"; // occurs when a second client attempts to connect - switches to newest\n};\n\ntype ApiMsg = CameraGrabApiMsg | ImuApiMsg | ServerDisconnectMsg;\n\ntype ImuDataFrame = {\n  unixTimestamp: number;\n  error?: string;\n  quaternion?: [x: number, y: number, z: number, w: number];\n  accelerometer?: [x: number, y: number, z: number];\n  gyroscope?: [x: number, y: number, z: number];\n  magnetometer?: [x: number, y: number, z: number];\n};\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport type SendPhotoFunc = () => void;\n\nexport class Api {\n  waitingOnButton: Observable<boolean>;\n  sendPhotoFunc: Observable<SendPhotoFunc | null>;\n  imuRawData: Observable<number[][]>;\n  imuDataFrame: Observable<ImuDataFrame>;\n  lastGrabCmd: Observable<CameraGrabApiMsg>;\n  latestCmdTimestamps: {\n    grab: number;\n    imu: number;\n  };\n\n  private ws: WebSocket;\n\n  // can't just use \"/ws\". WebSocket constructor won't accept it.\n  static WS_URL =\n    \"wss://\" + document.domain + \":\" + window.location.port + \"/ws\";\n\n  constructor(ws: WebSocket) {\n    this.ws = ws;\n    this.waitingOnButton = new Observable(false as boolean);\n    this.sendPhotoFunc = new Observable(null as any);\n    this.imuRawData = new Observable([\n      [Math.floor(Date.now() / 1000)],\n      [0],\n      [0],\n      [0],\n    ]);\n    this.lastGrabCmd = new Observable({\n      frontFacing: false,\n      button: false,\n      wait: null,\n      encoding: \"webp\",\n      quality: 90,\n      resolution: [640, 480],\n    } as CameraGrabApiMsg);\n    this.imuDataFrame = new Observable(\n      {\n        unixTimestamp: NaN,\n        error:\n          \"No IMU data is available. The device either does not support IMU data or has not been given permission.\",\n      } as ImuDataFrame,\n      (frame) => {\n        // If we received any new data, the error above is invalid. clear it.\n        if (\"error\" in frame) {\n          delete frame[\"error\"];\n        }\n      }\n    );\n    this.latestCmdTimestamps = {\n      grab: 0,\n      imu: 0,\n    };\n\n    ws.onmessage = async ({ data }: { data: string }) =>\n      this.onMsg(JSON.parse(data) as ApiMsg);\n  }\n\n  private async onMsg(msg: ApiMsg) {\n    // handle \"wait\"\n    if (\"wait\" in msg && msg[\"wait\"] !== null) {\n      const nowMs = Date.now();\n      const msToWait =\n        this.latestCmdTimestamps[msg.cmd] + msg[\"wait\"] * 1000 - nowMs;\n\n      if (msToWait > 0) {\n        await sleep(msToWait);\n      }\n    }\n\n    // different functionality based on api cmd\n    switch (msg.cmd) {\n      case \"grab\":\n        this.lastGrabCmd.set(msg);\n\n        if (msg.button) {\n          this.waitingOnButton.set(true);\n        } else if (this.sendPhotoFunc.state !== null) {\n          const sendPhoto = this.sendPhotoFunc.state;\n          this.latestCmdTimestamps.grab = Date.now();\n          sendPhoto();\n        } else {\n          // queue a send once sendPhoto function has been set\n          const cb = (sendPhoto: SendPhotoFunc | null) => {\n            this.latestCmdTimestamps.grab = Date.now();\n            sendPhoto!();\n            this.sendPhotoFunc.deRegister(cb);\n          };\n          this.sendPhotoFunc.onChange(cb);\n        }\n        break;\n\n      case \"imu\":\n        this.send(this.imuDataFrame.state);\n        this.latestCmdTimestamps[\"imu\"] = Date.now();\n        break;\n\n      case \"disconnect\":\n        this.ws.close();\n        throw new Error(\"Another client device has taken control of websocket\");\n\n      default:\n        throw new Error(`Unhandled Api message ${msg}`);\n    }\n  }\n\n  send(msg: any) {\n    this.ws.send(msg instanceof Blob ? msg : JSON.stringify(msg));\n  }\n}\n\nexport function useApi() {\n  // params: ConstructorParameters<typeof Api> ) {\n  const [api, setApi] = useState<Api | null | Error>(null);\n\n  useEffect(() => {\n    const ws = new WebSocket(Api.WS_URL);\n    ws.onopen = () => setApi(new Api(ws)); //, params));\n    ws.onclose = () => setApi(null);\n    ws.onerror = (e) =>\n      setApi(new Error(`couldn't connect to ws api @ ${Api.WS_URL}`));\n    return ws.close; // effect cleanup handler\n  }, []); //[params]);\n\n  return api;\n}\n","import { useEffect, useRef } from \"react\";\nimport uPlot from \"uplot\";\nimport { Observable } from \"./observable\";\nimport unwrap from \"ts-unwrap\";\nimport \"uplot/dist/uPlot.min.css\";\n\nexport type SignalScope = {\n  name: string;\n  styles: string | {} | null;\n  labels: string[] | null;\n  data: Observable<number[][]>;\n\n  // millliseconds of data to retain and display -\n  // prevents memory usage from growing indefinitely\n  keepLastSecs: number;\n};\n\nexport function SignalScopeChart({ scope }: { scope: SignalScope }) {\n  const [data] = scope.data.useState();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const chartRef = useRef<uPlot>();\n\n  // update the chart\n  useEffect(() => {\n    // use the same modern matplotlib default colours\n    const VEGA_CAT_10_COLORS = [\n      \"#1f77b4\",\n      \"#ff7f0e\",\n      \"#2ca02c\",\n      \"#d62728\",\n      \"#9467bd\",\n      \"#8c564b\",\n      \"#e377c2\",\n      \"#7f7f7f\",\n      \"#bcbd22\",\n      \"#17becf\",\n    ];\n\n    const container = containerRef.current;\n    if (chartRef.current) {\n      chartRef.current.setData(data as any);\n    } else if (container && !chartRef.current) {\n      const uplot = (chartRef.current = new uPlot(\n        {\n          width: 600,\n          height: 400,\n\n          series: [\n            {},\n            ...(scope.labels ?? []).map((label, i) => ({\n              label,\n              stroke: VEGA_CAT_10_COLORS[i % VEGA_CAT_10_COLORS.length],\n              points: { show: false },\n            })),\n          ],\n\n          axes: [\n            {\n              stroke: \"white\",\n              labelSize: 0,\n              grid: { stroke: \"white\", width: 0.1 },\n              ticks: { show: false, size: 0 },\n              size: 0,\n              values: \"\",\n            },\n            {\n              stroke: \"white\",\n              grid: { stroke: \"white\", width: 0.1 },\n              ticks: { show: false },\n            },\n          ],\n        },\n        data as any, // uPlot.js types incorrect here\n        container\n      ));\n      const parent = unwrap(container.parentElement);\n\n      new ResizeObserver(() => {\n        const LEGEND_HEIGHT = 25;\n        uplot.setSize({\n          width: parent.offsetWidth,\n          height: parent.offsetHeight - LEGEND_HEIGHT,\n        });\n      }).observe(parent);\n    }\n  }, [containerRef, data, scope.labels]);\n\n  return <div ref={containerRef} />;\n}\n","import { useEffect, useRef, useCallback, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Switch from \"react-switch\";\nimport Quaternion from \"quaternion\";\nimport unwrap from \"ts-unwrap\";\nimport \"md-gum-polyfill\"; // get videostream working on more browsers\n\nimport { useApi, Api, SendPhotoFunc } from \"./api\";\nimport { SignalScopeChart } from \"./SignalScopeChart\";\n\nconst KEEP_LAST_SECS_IMU_DATA = 5;\n\nfunction MainUI({ api }: { api: Api }) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [\n    waitingForButton,\n    setWaitingForButton,\n  ] = api.waitingOnButton.useState();\n  const [showImuData, setShowImuData] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const [frontCamera, setFrontCamera] = useState<boolean | null>(null);\n  const [\n    {\n      frontFacing: defaultFrontFacing,\n      resolution: [width, height],\n      quality,\n      encoding,\n    },\n  ] = api.lastGrabCmd.useState();\n\n  const sendPhoto: SendPhotoFunc = useCallback(async () => {\n    const canvas = unwrap(canvasRef.current);\n    const video = unwrap(videoRef.current);\n    setWaitingForButton(false);\n\n    if (video.videoHeight === 0) {\n    // the video is in a reload state (due to changing stream constraints.).\n    // use a dirty hack\n      const before = video.oncanplay;\n      await new Promise((resolve) => {\n        video.oncanplay = resolve;\n      });\n      video.oncanplay = before;\n    }\n\n    if (canvas.width !== video.videoWidth) {\n      canvas.width = video.videoWidth;\n    }\n    if (canvas.height !== video.videoHeight) {\n      canvas.height = video.videoHeight;\n    }\n    const ctx = unwrap(canvas.getContext(\"2d\"));\n    const timestamp = Date.now();\n\n    // draw to the canvas and encode it as the desired image type/quality\n    // yes, this is the only way to do it right now.\n    ctx.drawImage(video, 0, 0);\n\n    canvas.toBlob(\n      (data: Blob | null) => {\n        api.send(\n          new Blob([new BigUint64Array([BigInt(timestamp)]), unwrap(data)])\n        );\n      },\n      `image/${encoding}`,\n      quality\n    );\n  }, [api, setWaitingForButton, quality, encoding]);\n\n  useEffect(() => {\n    const video = unwrap(videoRef.current);\n\n    const constraints = {\n      video: {\n        facingMode: frontCamera ?? defaultFrontFacing ? \"user\" : \"environment\",\n        width,\n        height,\n      },\n    };\n\n    (async function updateLiveStream() {\n      if (video.srcObject === null) {\n        video.srcObject = await navigator.mediaDevices.getUserMedia(\n          constraints\n        );\n      } else {\n        await (video.srcObject as MediaStream)\n          .getVideoTracks()[0]\n          .applyConstraints(constraints.video);\n      }\n    })();\n\n    // maybe TODO: cleanup stream\n  }, [api, frontCamera, defaultFrontFacing, width, height]);\n\n  useEffect(() => {\n    (async function setupSensors() {\n      try {\n        const sensors = {\n          accelerometer: Accelerometer,\n          gyroscope: Gyroscope,\n          magnetometer: Magnetometer,\n        };\n\n        for (const [name, SensorClass] of Object.entries(sensors)) {\n          // if the device supports this sensor type\n          if (typeof SensorClass == \"function\") {\n            await navigator.permissions.query({ name: name as PermissionName });\n\n            const sensor = new SensorClass({ frequency: 30 });\n\n            sensor.addEventListener(\"error\", (event) => {\n              // Handle runtime errors.\n              if (event.error.name === \"NotAllowedError\") {\n                // Branch to code for requesting permission.\n              } else if (event.error.name === \"NotReadableError\") {\n                console.error(\"Cannot connect to the sensor.\");\n              } else {\n                api.imuDataFrame.set({\n                  ...api.imuDataFrame.state,\n                  [name]: [sensor.x, sensor.y, sensor.z],\n                });\n              }\n            });\n            sensor.addEventListener(\"reading\", () => {});\n            sensor.start();\n          }\n        }\n      } catch (error) {\n        if (error.name === \"SecurityError\") {\n          // See the note above about feature policy.\n          console.error(\"Sensor construction was blocked by a feature policy.\");\n        } else if (error.name === \"ReferenceError\") {\n          console.error(\"Sensor is not supported by the User Agent.\");\n        } else {\n          throw error;\n        }\n      }\n    })();\n\n    const onDeviceOrientation = ({\n      alpha,\n      beta,\n      gamma,\n    }: DeviceOrientationEvent) => {\n      // sometimes this event happens even on devices that don't have sensors\n      if (alpha === null) {\n        return;\n      }\n\n      // append the data\n      const now = Date.now() / 1000;\n      const data = api.imuRawData.state;\n      data[0].push(now / 1000);\n      data[1].push(alpha!);\n      data[2].push(beta!);\n      data[3].push(gamma!);\n\n      // only keep scope.keepLastSecs worth of data\n      const [time] = data;\n      const cutoffTime = now - KEEP_LAST_SECS_IMU_DATA;\n      const cutoffIdx = time.findIndex((t) => t >= cutoffTime);\n      if (cutoffIdx > 0) {\n        for (const series of data) {\n          series.splice(0, cutoffIdx);\n        }\n      }\n\n      // Update the rotation object\n      const RAD = Math.PI / 180;\n      const q = Quaternion.fromEuler(\n        unwrap(alpha) * RAD,\n        unwrap(beta) * RAD,\n        unwrap(gamma) * RAD\n      );\n\n      // [OPTIONAL IMPROVEMENT]: Display orientation via a rotating mobile phone image\n      // Set the CSS style to the element you want to rotate\n      // elm.style.transform = \"matrix3d(\" + q.conjugate().toMatrix4() + \")\";\n\n      // update the observable\n      api.imuRawData.set(data.slice());\n      api.imuDataFrame.set({\n        ...api.imuDataFrame.state,\n        unixTimestamp: now,\n        quaternion: [q.x, q.y, q.z, q.w],\n      });\n    };\n\n    window.addEventListener(\"deviceorientation\", onDeviceOrientation);\n    return () =>\n      window.removeEventListener(\"deviceorientation\", onDeviceOrientation);\n  }, [api.imuRawData, api.imuDataFrame]);\n\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"relative\",\n        display: \"flex\",\n      }}\n    >\n      <video\n        ref={videoRef}\n        autoPlay\n        onCanPlay={() => {\n          api.sendPhotoFunc.set(sendPhoto);\n        }}\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\", margin: \"0 auto\" }}\n      />\n      {/* canvas required for screenshot (MediaStreamCapture API not available in most mobile browsers) */}\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\n\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          height: \"100vh\",\n          width: \"100%\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"start\",\n            margin: 20,\n          }}\n        >\n          {showImuData ? (\n            <div\n              style={{\n                height: 100,\n                width: \"100%\",\n                color: \"white\",\n                background: \"#282c34\",\n                borderRadius: 5,\n              }}\n            >\n              <SignalScopeChart\n                scope={{\n                  name: \"Orientation\",\n                  styles: null,\n                  labels: [\"alpha\", \"beta\", \"gamma\"],\n                  data: api.imuRawData,\n                  keepLastSecs: 5,\n                }}\n              />\n            </div>\n          ) : null}\n\n          <Button\n            variant=\"outline-light\"\n            style={{\n              borderRadius: 99,\n              height: 60,\n              width: 60,\n              fontSize: 32,\n              margin: 10,\n            }}\n            onClick={() => setShowMenu(true)}\n          >\n            ⋯\n          </Button>\n\n          <Modal show={showMenu} onHide={() => setShowMenu(false)} size=\"lg\">\n            <Modal.Header closeButton>\n              <Modal.Title>Menu</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <label\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  fontSize: \"1rem\",\n                }}\n              >\n                Show IMU Data?\n                <Switch\n                  onChange={setShowImuData}\n                  checked={showImuData}\n                  height={30}\n                  width={60}\n                />\n              </label>\n              <label\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  fontSize: \"1rem\",\n                }}\n              >\n                Camera\n                <select\n                  className=\"form-select\"\n                  onChange={(e: any) => {\n                    setFrontCamera(\n                      {\n                        default: null,\n                        front: true,\n                        back: false,\n                      }[e.target.value as \"default\" | \"front\" | \"back\"]\n                    );\n                  }}\n                >\n                  <option value=\"default\" selected={frontCamera === null}>\n                    Default (obey `phone.grab(cam=?)`)\n                  </option>\n                  <option value=\"front\" selected={frontCamera === true}>\n                    Front Camera (touchscreen side)\n                  </option>\n                  <option value=\"back\" selected={frontCamera === false}>\n                    Back Camera\n                  </option>\n                </select>\n              </label>\n            </Modal.Body>\n          </Modal>\n        </div>\n\n        {waitingForButton ? (\n          <Button\n            variant=\"outline-light\"\n            style={{\n              borderRadius: 99,\n              height: 90,\n              width: 90,\n              fontSize: 32,\n              margin: 10,\n              marginBottom: 50,\n              alignSelf: \"center\",\n            }}\n            disabled={!waitingForButton}\n            onClick={sendPhoto}\n          >\n            📷\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default function App() {\n  const api = useApi();\n\n  if (api instanceof Error) {\n    throw api; // get handle'd by error boundary in index.tsx\n  }\n\n  return api ? <MainUI api={api} /> : null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <ErrorBoundary\n    fallbackRender={({ error, resetErrorBoundary }) => (\n      <Alert variant=\"danger\">\n        Something went wrong:\n        {error.toString()}\n        <br />\n        <Alert.Link onClick={resetErrorBoundary}>Try again</Alert.Link>\n      </Alert>\n    )}\n  >\n    <App />\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}