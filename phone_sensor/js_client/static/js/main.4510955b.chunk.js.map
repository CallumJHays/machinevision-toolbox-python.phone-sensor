{"version":3,"sources":["observable.ts","api.ts","SignalScopeChart.tsx","App.tsx","index.tsx"],"names":["Observable","init","onChange","state","callbacks","boundSet","this","set","bind","useState","setState","indexOf","useEffect","deRegister","cb","push","splice","sleep","ms","Promise","resolve","setTimeout","Api","ws","waitingOnButton","sendPhotoFunc","imuRawData","imuDataFrame","lastGrabCmd","latestCmdTimestamps","Math","floor","Date","now","frontFacing","button","wait","encoding","quality","resolution","unixTimestamp","NaN","error","frame","grab","imu","onmessage","a","data","onMsg","JSON","parse","msg","nowMs","msToWait","cmd","sendPhoto","send","close","Error","Blob","stringify","WS_URL","document","domain","window","location","port","SignalScopeChart","scope","containerRef","useRef","chartRef","VEGA_CAT_10_COLORS","container","current","setData","uplot","uPlot","width","height","series","labels","map","label","i","stroke","length","points","show","axes","labelSize","grid","ticks","size","values","parent","unwrap","parentElement","ResizeObserver","setSize","offsetWidth","offsetHeight","observe","ref","MainUI","api","videoRef","canvasRef","waitingForButton","setWaitingForButton","showImuData","setShowImuData","showMenu","setShowMenu","frontCamera","setFrontCamera","defaultFrontFacing","useCallback","canvas","video","videoHeight","before","oncanplay","videoWidth","ctx","getContext","timestamp","drawImage","toBlob","BigUint64Array","BigInt","constraints","facingMode","srcObject","navigator","mediaDevices","getUserMedia","getVideoTracks","applyConstraints","sensors","accelerometer","Accelerometer","gyroscope","Gyroscope","magnetometer","Magnetometer","name","SensorClass","permissions","query","sensor","frequency","addEventListener","event","console","x","y","z","start","Object","entries","onDeviceOrientation","alpha","beta","gamma","time","cutoffTime","cutoffIdx","findIndex","t","RAD","PI","q","Quaternion","fromEuler","slice","quaternion","w","removeEventListener","style","position","display","autoPlay","onCanPlay","maxWidth","maxHeight","margin","top","flexDirection","justifyContent","alignItems","color","background","borderRadius","styles","keepLastSecs","Button","variant","fontSize","onClick","Modal","onHide","Header","closeButton","Title","Body","checked","className","e","default","front","back","target","value","selected","marginBottom","alignSelf","disabled","App","setApi","WebSocket","onopen","onclose","onerror","useApi","ReactDOM","render","fallbackRender","resetErrorBoundary","Alert","toString","Link","getElementById"],"mappings":"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","file":"static/js/main.4510955b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\ntype Callback<T> = (state: T) => void;\r\n\r\n// something neat I came up with - similar to https://github.com/pmndrs/valtio\r\nexport class Observable<T> {\r\n  state: T;\r\n  callbacks: Callback<T>[];\r\n  private boundSet: Callback<T>;\r\n\r\n  constructor(init: T, onChange: Callback<T> | null = null) {\r\n    this.state = init;\r\n    this.callbacks = onChange ? [onChange] : [];\r\n    this.boundSet = this.set.bind(this);\r\n  }\r\n\r\n  // register with react lifecycle\r\n  useState(): [T, (state: T) => void] {\r\n    const [state, setState] = useState<T>(this.state); // eslint-disable-line\r\n\r\n    // this would usually be in the useEffect below, but for compatability with the\r\n    // component lifecycle we need this to be called here\r\n    if (this.callbacks.indexOf(setState) === -1) {\r\n      this.onChange(setState);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      return () => this.deRegister(setState);\r\n    }, []);\r\n\r\n    return [state, this.boundSet];\r\n  }\r\n\r\n  onChange(cb: Callback<T>) {\r\n    this.callbacks.push(cb);\r\n  }\r\n\r\n  deRegister(cb: Callback<T>) {\r\n    this.callbacks.splice(this.callbacks.indexOf(cb), 1);\r\n  }\r\n\r\n  set(state: T) {\r\n    this.state = state;\r\n    for (const cb of this.callbacks) {\r\n      cb(state);\r\n    }\r\n  }\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Observable } from \"./observable\";\r\n\r\ntype CameraGrabApiMsg = {\r\n  cmd: \"grab\";\r\n  frontFacing: boolean;\r\n  button: boolean;\r\n  wait: number | null;\r\n  encoding: string;\r\n  quality: number;\r\n  resolution: [w: number, h: number];\r\n};\r\n\r\ntype ImuApiMsg = {\r\n  cmd: \"imu\";\r\n  wait: number | null;\r\n};\r\n\r\ntype ServerDisconnectMsg = {\r\n  cmd: \"disconnect\"; // occurs when a second client attempts to connect - switches to newest\r\n};\r\n\r\ntype ApiMsg = CameraGrabApiMsg | ImuApiMsg | ServerDisconnectMsg;\r\n\r\ntype ImuDataFrame = {\r\n  unixTimestamp: number;\r\n  error?: string;\r\n  quaternion?: [x: number, y: number, z: number, w: number];\r\n  accelerometer?: [x: number, y: number, z: number];\r\n  gyroscope?: [x: number, y: number, z: number];\r\n  magnetometer?: [x: number, y: number, z: number];\r\n};\r\n\r\nfunction sleep(ms: number) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport type SendPhotoFunc = () => void;\r\n\r\nexport class Api {\r\n  waitingOnButton: Observable<boolean>;\r\n  sendPhotoFunc: Observable<SendPhotoFunc | null>;\r\n  imuRawData: Observable<number[][]>;\r\n  imuDataFrame: Observable<ImuDataFrame>;\r\n  lastGrabCmd: Observable<CameraGrabApiMsg>;\r\n  latestCmdTimestamps: {\r\n    grab: number;\r\n    imu: number;\r\n  };\r\n\r\n  private ws: WebSocket;\r\n\r\n  // can't just use \"/ws\". WebSocket constructor won't accept it.\r\n  static WS_URL =\r\n    \"wss://\" + document.domain + \":\" + window.location.port + \"/ws\";\r\n\r\n  constructor(ws: WebSocket) {\r\n    this.ws = ws;\r\n    this.waitingOnButton = new Observable(false as boolean);\r\n    this.sendPhotoFunc = new Observable(null as any);\r\n    this.imuRawData = new Observable([\r\n      [Math.floor(Date.now() / 1000)],\r\n      [0],\r\n      [0],\r\n      [0],\r\n    ]);\r\n    this.lastGrabCmd = new Observable({\r\n      frontFacing: false,\r\n      button: false,\r\n      wait: null,\r\n      encoding: \"webp\",\r\n      quality: 90,\r\n      resolution: [640, 480],\r\n    } as CameraGrabApiMsg);\r\n    this.imuDataFrame = new Observable(\r\n      {\r\n        unixTimestamp: NaN,\r\n        error:\r\n          \"No IMU data is available. The device either does not support IMU data or has not been given permission.\",\r\n      } as ImuDataFrame,\r\n      (frame) => {\r\n        // If we received any new data, the error above is invalid. clear it.\r\n        if (\"error\" in frame) {\r\n          delete frame[\"error\"];\r\n        }\r\n      }\r\n    );\r\n    this.latestCmdTimestamps = {\r\n      grab: 0,\r\n      imu: 0,\r\n    };\r\n\r\n    ws.onmessage = async ({ data }: { data: string }) =>\r\n      this.onMsg(JSON.parse(data) as ApiMsg);\r\n  }\r\n\r\n  private async onMsg(msg: ApiMsg) {\r\n    // handle \"wait\"\r\n    if (\"wait\" in msg && msg[\"wait\"] !== null) {\r\n      const nowMs = Date.now();\r\n      const msToWait =\r\n        this.latestCmdTimestamps[msg.cmd] + msg[\"wait\"] * 1000 - nowMs;\r\n\r\n      if (msToWait > 0) {\r\n        await sleep(msToWait);\r\n      }\r\n    }\r\n\r\n    // different functionality based on api cmd\r\n    switch (msg.cmd) {\r\n      case \"grab\":\r\n        this.lastGrabCmd.set(msg);\r\n\r\n        if (msg.button) {\r\n          this.waitingOnButton.set(true);\r\n        } else if (this.sendPhotoFunc.state !== null) {\r\n          const sendPhoto = this.sendPhotoFunc.state;\r\n          this.latestCmdTimestamps.grab = Date.now();\r\n          sendPhoto();\r\n        } else {\r\n          // queue a send once sendPhoto function has been set\r\n          const cb = (sendPhoto: SendPhotoFunc | null) => {\r\n            this.latestCmdTimestamps.grab = Date.now();\r\n            sendPhoto!();\r\n            this.sendPhotoFunc.deRegister(cb);\r\n          };\r\n          this.sendPhotoFunc.onChange(cb);\r\n        }\r\n        break;\r\n\r\n      case \"imu\":\r\n        this.send(this.imuDataFrame.state);\r\n        this.latestCmdTimestamps[\"imu\"] = Date.now();\r\n        break;\r\n\r\n      case \"disconnect\":\r\n        this.ws.close();\r\n        throw new Error(\"Another client device has taken control of websocket\");\r\n\r\n      default:\r\n        throw new Error(`Unhandled Api message ${msg}`);\r\n    }\r\n  }\r\n\r\n  send(msg: any) {\r\n    this.ws.send(msg instanceof Blob ? msg : JSON.stringify(msg));\r\n  }\r\n}\r\n\r\nexport function useApi() {\r\n  // params: ConstructorParameters<typeof Api> ) {\r\n  const [api, setApi] = useState<Api | null | Error>(null);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket(Api.WS_URL);\r\n    ws.onopen = () => setApi(new Api(ws)); //, params));\r\n    ws.onclose = () => setApi(null);\r\n    ws.onerror = (e) =>\r\n      setApi(new Error(`couldn't connect to ws api @ ${Api.WS_URL}`));\r\n    return ws.close; // effect cleanup handler\r\n  }, []); //[params]);\r\n\r\n  return api;\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport uPlot from \"uplot\";\r\nimport { Observable } from \"./observable\";\r\nimport unwrap from \"ts-unwrap\";\r\nimport \"uplot/dist/uPlot.min.css\";\r\n\r\nexport type SignalScope = {\r\n  name: string;\r\n  styles: string | {} | null;\r\n  labels: string[] | null;\r\n  data: Observable<number[][]>;\r\n\r\n  // millliseconds of data to retain and display -\r\n  // prevents memory usage from growing indefinitely\r\n  keepLastSecs: number;\r\n};\r\n\r\nexport function SignalScopeChart({ scope }: { scope: SignalScope }) {\r\n  const [data] = scope.data.useState();\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const chartRef = useRef<uPlot>();\r\n\r\n  // update the chart\r\n  useEffect(() => {\r\n    // use the same modern matplotlib default colours\r\n    const VEGA_CAT_10_COLORS = [\r\n      \"#1f77b4\",\r\n      \"#ff7f0e\",\r\n      \"#2ca02c\",\r\n      \"#d62728\",\r\n      \"#9467bd\",\r\n      \"#8c564b\",\r\n      \"#e377c2\",\r\n      \"#7f7f7f\",\r\n      \"#bcbd22\",\r\n      \"#17becf\",\r\n    ];\r\n\r\n    const container = containerRef.current;\r\n    if (chartRef.current) {\r\n      chartRef.current.setData(data as any);\r\n    } else if (container && !chartRef.current) {\r\n      const uplot = (chartRef.current = new uPlot(\r\n        {\r\n          width: 600,\r\n          height: 400,\r\n\r\n          series: [\r\n            {},\r\n            ...(scope.labels ?? []).map((label, i) => ({\r\n              label,\r\n              stroke: VEGA_CAT_10_COLORS[i % VEGA_CAT_10_COLORS.length],\r\n              points: { show: false },\r\n            })),\r\n          ],\r\n\r\n          axes: [\r\n            {\r\n              stroke: \"white\",\r\n              labelSize: 0,\r\n              grid: { stroke: \"white\", width: 0.1 },\r\n              ticks: { show: false, size: 0 },\r\n              size: 0,\r\n              values: \"\",\r\n            },\r\n            {\r\n              stroke: \"white\",\r\n              grid: { stroke: \"white\", width: 0.1 },\r\n              ticks: { show: false },\r\n            },\r\n          ],\r\n        },\r\n        data as any, // uPlot.js types incorrect here\r\n        container\r\n      ));\r\n      const parent = unwrap(container.parentElement);\r\n\r\n      new ResizeObserver(() => {\r\n        const LEGEND_HEIGHT = 25;\r\n        uplot.setSize({\r\n          width: parent.offsetWidth,\r\n          height: parent.offsetHeight - LEGEND_HEIGHT,\r\n        });\r\n      }).observe(parent);\r\n    }\r\n  }, [containerRef, data, scope.labels]);\r\n\r\n  return <div ref={containerRef} />;\r\n}\r\n","import { useEffect, useRef, useCallback, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Switch from \"react-switch\";\r\nimport Quaternion from \"quaternion\";\r\nimport unwrap from \"ts-unwrap\";\r\nimport \"md-gum-polyfill\"; // get videostream working on more browsers\r\n\r\nimport { useApi, Api, SendPhotoFunc } from \"./api\";\r\nimport { SignalScopeChart } from \"./SignalScopeChart\";\r\n\r\nconst KEEP_LAST_SECS_IMU_DATA = 5;\r\n\r\nfunction MainUI({ api }: { api: Api }) {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [\r\n    waitingForButton,\r\n    setWaitingForButton,\r\n  ] = api.waitingOnButton.useState();\r\n  const [showImuData, setShowImuData] = useState(false);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [frontCamera, setFrontCamera] = useState<boolean | null>(null);\r\n  const [\r\n    {\r\n      frontFacing: defaultFrontFacing,\r\n      resolution: [width, height],\r\n      quality,\r\n      encoding,\r\n    },\r\n  ] = api.lastGrabCmd.useState();\r\n\r\n  const sendPhoto: SendPhotoFunc = useCallback(async () => {\r\n    const canvas = unwrap(canvasRef.current);\r\n    const video = unwrap(videoRef.current);\r\n    setWaitingForButton(false);\r\n\r\n    if (video.videoHeight === 0) {\r\n    // the video is in a reload state (due to changing stream constraints.).\r\n    // use a dirty hack\r\n      const before = video.oncanplay;\r\n      await new Promise((resolve) => {\r\n        video.oncanplay = resolve;\r\n      });\r\n      video.oncanplay = before;\r\n    }\r\n\r\n    if (canvas.width !== video.videoWidth) {\r\n      canvas.width = video.videoWidth;\r\n    }\r\n    if (canvas.height !== video.videoHeight) {\r\n      canvas.height = video.videoHeight;\r\n    }\r\n    const ctx = unwrap(canvas.getContext(\"2d\"));\r\n    const timestamp = Date.now();\r\n\r\n    // draw to the canvas and encode it as the desired image type/quality\r\n    // yes, this is the only way to do it right now.\r\n    ctx.drawImage(video, 0, 0);\r\n\r\n    canvas.toBlob(\r\n      (data: Blob | null) => {\r\n        api.send(\r\n          new Blob([new BigUint64Array([BigInt(timestamp)]), unwrap(data)])\r\n        );\r\n      },\r\n      `image/${encoding}`,\r\n      quality\r\n    );\r\n  }, [api, setWaitingForButton, quality, encoding]);\r\n\r\n  useEffect(() => {\r\n    const video = unwrap(videoRef.current);\r\n\r\n    const constraints = {\r\n      video: {\r\n        facingMode: frontCamera ?? defaultFrontFacing ? \"user\" : \"environment\",\r\n        width,\r\n        height,\r\n      },\r\n    };\r\n\r\n    (async function updateLiveStream() {\r\n      if (video.srcObject === null) {\r\n        video.srcObject = await navigator.mediaDevices.getUserMedia(\r\n          constraints\r\n        );\r\n      } else {\r\n        await (video.srcObject as MediaStream)\r\n          .getVideoTracks()[0]\r\n          .applyConstraints(constraints.video);\r\n      }\r\n    })();\r\n\r\n    // maybe TODO: cleanup stream\r\n  }, [api, frontCamera, defaultFrontFacing, width, height]);\r\n\r\n  useEffect(() => {\r\n    (async function setupSensors() {\r\n      try {\r\n        const sensors = {\r\n          accelerometer: Accelerometer,\r\n          gyroscope: Gyroscope,\r\n          magnetometer: Magnetometer,\r\n        };\r\n\r\n        for (const [name, SensorClass] of Object.entries(sensors)) {\r\n          // if the device supports this sensor type\r\n          if (typeof SensorClass == \"function\") {\r\n            await navigator.permissions.query({ name: name as PermissionName });\r\n\r\n            const sensor = new SensorClass({ frequency: 30 });\r\n\r\n            sensor.addEventListener(\"error\", (event) => {\r\n              // Handle runtime errors.\r\n              if (event.error.name === \"NotAllowedError\") {\r\n                // Branch to code for requesting permission.\r\n              } else if (event.error.name === \"NotReadableError\") {\r\n                console.error(\"Cannot connect to the sensor.\");\r\n              } else {\r\n                api.imuDataFrame.set({\r\n                  ...api.imuDataFrame.state,\r\n                  [name]: [sensor.x, sensor.y, sensor.z],\r\n                });\r\n              }\r\n            });\r\n            sensor.addEventListener(\"reading\", () => {});\r\n            sensor.start();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        if (error.name === \"SecurityError\") {\r\n          // See the note above about feature policy.\r\n          console.error(\"Sensor construction was blocked by a feature policy.\");\r\n        } else if (error.name === \"ReferenceError\") {\r\n          console.error(\"Sensor is not supported by the User Agent.\");\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    })();\r\n\r\n    const onDeviceOrientation = ({\r\n      alpha,\r\n      beta,\r\n      gamma,\r\n    }: DeviceOrientationEvent) => {\r\n      // sometimes this event happens even on devices that don't have sensors\r\n      if (alpha === null) {\r\n        return;\r\n      }\r\n\r\n      // append the data\r\n      const now = Date.now() / 1000;\r\n      const data = api.imuRawData.state;\r\n      data[0].push(now / 1000);\r\n      data[1].push(alpha!);\r\n      data[2].push(beta!);\r\n      data[3].push(gamma!);\r\n\r\n      // only keep scope.keepLastSecs worth of data\r\n      const [time] = data;\r\n      const cutoffTime = now - KEEP_LAST_SECS_IMU_DATA;\r\n      const cutoffIdx = time.findIndex((t) => t >= cutoffTime);\r\n      if (cutoffIdx > 0) {\r\n        for (const series of data) {\r\n          series.splice(0, cutoffIdx);\r\n        }\r\n      }\r\n\r\n      // Update the rotation object\r\n      const RAD = Math.PI / 180;\r\n      const q = Quaternion.fromEuler(\r\n        unwrap(alpha) * RAD,\r\n        unwrap(beta) * RAD,\r\n        unwrap(gamma) * RAD\r\n      );\r\n\r\n      // [OPTIONAL IMPROVEMENT]: Display orientation via a rotating mobile phone image\r\n      // Set the CSS style to the element you want to rotate\r\n      // elm.style.transform = \"matrix3d(\" + q.conjugate().toMatrix4() + \")\";\r\n\r\n      // update the observable\r\n      api.imuRawData.set(data.slice());\r\n      api.imuDataFrame.set({\r\n        ...api.imuDataFrame.state,\r\n        unixTimestamp: now,\r\n        quaternion: [q.x, q.y, q.z, q.w],\r\n      });\r\n    };\r\n\r\n    window.addEventListener(\"deviceorientation\", onDeviceOrientation);\r\n    return () =>\r\n      window.removeEventListener(\"deviceorientation\", onDeviceOrientation);\r\n  }, [api.imuRawData, api.imuDataFrame]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <video\r\n        ref={videoRef}\r\n        autoPlay\r\n        onCanPlay={() => {\r\n          api.sendPhotoFunc.set(sendPhoto);\r\n        }}\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\", margin: \"0 auto\" }}\r\n      />\r\n      {/* canvas required for screenshot (MediaStreamCapture API not available in most mobile browsers) */}\r\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"start\",\r\n            margin: 20,\r\n          }}\r\n        >\r\n          {showImuData ? (\r\n            <div\r\n              style={{\r\n                height: 100,\r\n                width: \"100%\",\r\n                color: \"white\",\r\n                background: \"#282c34\",\r\n                borderRadius: 5,\r\n              }}\r\n            >\r\n              <SignalScopeChart\r\n                scope={{\r\n                  name: \"Orientation\",\r\n                  styles: null,\r\n                  labels: [\"alpha\", \"beta\", \"gamma\"],\r\n                  data: api.imuRawData,\r\n                  keepLastSecs: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          ) : null}\r\n\r\n          <Button\r\n            variant=\"outline-light\"\r\n            style={{\r\n              borderRadius: 99,\r\n              height: 60,\r\n              width: 60,\r\n              fontSize: 32,\r\n              margin: 10,\r\n            }}\r\n            onClick={() => setShowMenu(true)}\r\n          >\r\n            ⋯\r\n          </Button>\r\n\r\n          <Modal show={showMenu} onHide={() => setShowMenu(false)} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Menu</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <label\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  fontSize: \"1rem\",\r\n                }}\r\n              >\r\n                Show IMU Data?\r\n                <Switch\r\n                  onChange={setShowImuData}\r\n                  checked={showImuData}\r\n                  height={30}\r\n                  width={60}\r\n                />\r\n              </label>\r\n              <label\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  fontSize: \"1rem\",\r\n                }}\r\n              >\r\n                Camera\r\n                <select\r\n                  className=\"form-select\"\r\n                  onChange={(e: any) => {\r\n                    setFrontCamera(\r\n                      {\r\n                        default: null,\r\n                        front: true,\r\n                        back: false,\r\n                      }[e.target.value as \"default\" | \"front\" | \"back\"]\r\n                    );\r\n                  }}\r\n                >\r\n                  <option value=\"default\" selected={frontCamera === null}>\r\n                    Default (obey `phone.grab(cam=?)`)\r\n                  </option>\r\n                  <option value=\"front\" selected={frontCamera === true}>\r\n                    Front Camera (touchscreen side)\r\n                  </option>\r\n                  <option value=\"back\" selected={frontCamera === false}>\r\n                    Back Camera\r\n                  </option>\r\n                </select>\r\n              </label>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n\r\n        {waitingForButton ? (\r\n          <Button\r\n            variant=\"outline-light\"\r\n            style={{\r\n              borderRadius: 99,\r\n              height: 90,\r\n              width: 90,\r\n              fontSize: 32,\r\n              margin: 10,\r\n              marginBottom: 50,\r\n              alignSelf: \"center\",\r\n            }}\r\n            disabled={!waitingForButton}\r\n            onClick={sendPhoto}\r\n          >\r\n            📷\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const api = useApi();\r\n\r\n  if (api instanceof Error) {\r\n    throw api; // get handle'd by error boundary in index.tsx\r\n  }\r\n\r\n  return api ? <MainUI api={api} /> : null;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary\r\n    fallbackRender={({ error, resetErrorBoundary }) => (\r\n      <Alert variant=\"danger\">\r\n        Something went wrong:\r\n        {error.toString()}\r\n        <br />\r\n        <Alert.Link onClick={resetErrorBoundary}>Try again</Alert.Link>\r\n      </Alert>\r\n    )}\r\n  >\r\n    <App />\r\n  </ErrorBoundary>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}